"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEqual = exports.hasProp = exports.getSpreadJsxAttributes = exports.getNamedJsxAttributes = exports.getJsxAttributeName = exports.getJsxAttributes = exports.isJsxSpreadAttribute = exports.isNamedJsxAttribute = void 0;
const getJsxAttributes = (jsxElement) => { var _a; return (_a = jsxElement.node.openingElement.attributes) !== null && _a !== void 0 ? _a : []; };
exports.getJsxAttributes = getJsxAttributes;
const getJsxAttributeName = (jsxAttribute) => isJsxSpreadAttribute(jsxAttribute) ? undefined : jsxAttribute.name.name.toString();
exports.getJsxAttributeName = getJsxAttributeName;
const getNamedJsxAttributes = (jsxElement) => getJsxAttributes(jsxElement).filter(isNamedJsxAttribute);
exports.getNamedJsxAttributes = getNamedJsxAttributes;
const getSpreadJsxAttributes = (jsxElement) => getJsxAttributes(jsxElement).filter(isJsxSpreadAttribute);
exports.getSpreadJsxAttributes = getSpreadJsxAttributes;
/**
 * Returns true if the JSXElement contains the JSXAttribute by name
 */
const hasProp = (jsxElement, prop) => {
    if (prop.type === 'JSXSpreadAttribute') {
        return false;
    }
    const existingNamedProps = getNamedJsxAttributes(jsxElement);
    return existingNamedProps.some(existingProp => isEqual(existingProp, prop));
};
exports.hasProp = hasProp;
const isEqual = (left, right) => {
    if (left.type === 'JSXSpreadAttribute' && right.type === 'JSXSpreadAttribute') {
        return left === right || left.argument === right.argument;
    }
    if (left.type === 'JSXAttribute' && right.type === 'JSXAttribute') {
        return left === right || getJsxAttributeName(left) === getJsxAttributeName(right);
    }
    return false;
};
exports.isEqual = isEqual;
const isNamedJsxAttribute = (jsxAttribute) => jsxAttribute.type === 'JSXAttribute';
exports.isNamedJsxAttribute = isNamedJsxAttribute;
const isJsxSpreadAttribute = (jsxAttribute) => jsxAttribute.type === 'JSXSpreadAttribute';
exports.isJsxSpreadAttribute = isJsxSpreadAttribute;
